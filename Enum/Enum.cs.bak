
#if __Enum_H__
#define public
#else
namespace Enum_
{
#endif

    namespace cas
    {
        public enum Method
        {
            MethodFirstEnum = 1000,
            //----------------------------------
            MOK,
            MNNNNNNNNGGGGGGGG,
            MReject,
            MStart,
            Dispatch_9845,
            MWait,
            MWait1,
            MWait2,
            MWait3,
            MCarHorn,
            MWait4,
            MWait5,
            MWait6,
            abcde,
            M_call_seq,
            M_call_seq1,
            M_call_seq2,
            call_MStart,
            btn_MStart,
            btn_MStop,
            M_CNS
        };

        public enum CarBase
        {
            CarBaseFirstEnum = 500,
            //----------------------------------
            Car_Forward3M,
            Car_Backward3M,
            Car_TurnRight,
        };

        namespace Car
        {
            public enum ForwardThenBackward
            {
                dummy_ForwardThenBackward,
            };
            public enum CircleBlock
            {
                dummy_CircleBlock,
                TurnToEast,
                TurnToSouth,
                TurnToWest,
                TurnToNorth,
            };
        }

        public enum PlaneBase
        {
            PlaneBaseFirstEnum = 500,
            //----------------------------------
            Plane_Forward3M,
            Plane_Backward3M,
            Plane_TurnRight,
        };

        namespace Plane
        {
            public enum ForwardThenBackward
            {
                dummy_ForwardThenBackward,
            };
            public enum CircleBlock
            {
                dummy_CircleBlock,
                TurnToEast,
                TurnToSouth,
                TurnToWest,
                TurnToNorth,
            };
        }

    }

    public enum AllSequences
    {
    };

    public enum CS //communication server command and state
    {
        CS_Basic_State_Start = -1,
        //-------------------------------------
        CS_Unlock = 0,   //better equl to zero
        CS_OK,
        CS_NG,
        CS_Lock,
        //-------------------------------------
        CS_Basic_State_End,
        //-------------------------------------
        //-------------------------------------
        //-------------------------------------
        //-------------------------------------
        //-------------------------------------
        //-------------------------------------
        CS_Car_Cmd_Start_Line,
        //-------------------------------------
        CS_Car_Forward3M,
        CS_Car_Backward3M,
        CS_Car_Stop,
        CS_Car_TurnRight,
        CS_Car_TurnLeft,
        CS_Car_Horn,
        CS_Car_Clockwise,
        CS_Car_Counterclockwise,
        //-------------------------------------
        CS_Car_Cmd_End_Line,
        //-------------------------------------
        //-------------------------------------
        //-------------------------------------
        //-------------------------------------
        //-------------------------------------
        //-------------------------------------
        //-------------------------------------
        //-------------------------------------
        CS_Plane_Cmd_Start_Line,
        //-------------------------------------
        CS_Plane_Forward3M,
        CS_Plane_Backward3M,
        CS_Plane_Stop,
        CS_Plane_TurnRight,
        CS_Plane_TurnLeft,
        CS_Plane_Horn,
        CS_Plane_Clockwise,
        CS_Plane_Counterclockwise,
        //-------------------------------------
        CS_Plane_Cmd_End_Line,
        //-------------------------------------
        //-------------------------------------
        //-------------------------------------
        //-------------------------------------
        //-------------------------------------
        //-------------------------------------
        //-------------------------------------
    };

    public enum IP
    {
        //-----------------------------------------
        INTEGER_DATA_POOL_SIZE = 10000,
        //-----------------------------------------
        IntegerDataPoolMinBoundary = 0,
        //-----------------------------------------
        //-----------------------------------------
        //-----------------------------------------
        //-----------------------------------------
        //-----------------------------------------
        //-----------------------------------------
        Sys_Method_Start,
        //---------------------------------------
        Sys_M_Car_ForwardThenBackward,
        Sys_M_Car_CircleBlock,
        //---------------------------------------
        Sys_M_Plane_ForwardThenBackward,
        Sys_M_Plane_CircleBlock,
        //---------------------------------------
        Sys_Method_End,
        //---------------------------------------
        //---------------------------------------
        //---------------------------------------
        //---------------------------------------
        //---------------------------------------
        //---------------------------------------
        ControlServer_Start,
        //---------------------------------------
        CS_Car,
        CS_Car_AutoUnlock,
        //---------------------------------------
        CS_Plane,
        CS_Plane_AutoUnlock,
        //---------------------------------------
        ControlServer_End,
        //---------------------------------------
        //---------------------------------------
        //---------------------------------------
        //---------------------------------------
        //---------------------------------------
        IS_SYS_SEND_LOG,
        IS_SYS_SEND_LOG_TO_USER,
        SYS_SEND_LOG_CHAR_1,
        SYS_SEND_LOG_CHAR_200 = SYS_SEND_LOG_CHAR_1 + 199, //const int MAX_LOG_SIZE = 200;
        //---------------------------------------
        //---------------------------------------
        //---------------------------------------
        //---------------------------------------
        //-----------------------------------------
        //-----------------------------------------
        //-----------------------------------------
        //-----------------------------------------
        //-----------------------------------------
        IntegerDataPoolMaxBoundary = INTEGER_DATA_POOL_SIZE / 4,
        //-----------------------------------------
    };


    public enum NULLEN
    {
    };

    public enum DP  //not yet implement
    {
        DB_DATA_POOL_SIZE = 10000,
        //-----------------------------------------
        DoubleDataPoolMinBoundary = 1,
        //-----------------------------------------
        DbDataPoolMaxBoundary = DB_DATA_POOL_SIZE / 8,
        //-----------------------------------------
    };


#if __Enum_H__
#define public
#else
}
#endif